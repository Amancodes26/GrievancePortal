{
  "info": {
    "name": "DSEU Grievance Portal - Auth & Grievance API",
    "description": "Comprehensive API collection for Authentication and Grievance Management System\n\nPrincipal Engineer Standards:\n- Complete authentication flow testing\n- Role-based access verification\n- Grievance lifecycle management\n- Error handling validation\n- Performance monitoring\n\nVersion: 1.0.0\nRelease Date: August 26, 2025",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "auth-grievance-api-2025"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set base URL if not already set",
          "if (!pm.globals.get('baseUrl')) {",
          "    pm.globals.set('baseUrl', 'http://localhost:5000/api/v1');",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/api/v1",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "adminToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "studentId",
      "value": "TEST123",
      "type": "string"
    },
    {
      "key": "grievanceId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê AUTHENTICATION",
      "description": "Complete authentication flow for users and admins",
      "item": [
        {
          "name": "üéì Student Authentication",
          "item": [
            {
              "name": "1. Check Roll Number Exists",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/auth/rollNumber-exist/{{studentId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", "auth", "rollNumber-exist", "{{studentId}}"]
                },
                "description": "Check if a student roll number exists in the system"
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "// Test successful response",
                      "pm.test('Roll number check successful', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                      "});",
                      "",
                      "// Log the response",
                      "console.log('Roll number check response:', pm.response.json());"
                    ]
                  }
                }
              ]
            },
            {
              "name": "2. Verify Partial Email",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/auth/verify-partial-email/{{studentId}}/student@dseu.ac.in",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", "auth", "verify-partial-email", "{{studentId}}", "student@dseu.ac.in"]
                },
                "description": "Verify if the email matches the roll number"
              }
            },
            {
              "name": "3. Student Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"rollNumber\": \"{{studentId}}\",\n  \"password\": \"student123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/users/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", "auth", "login"]
                },
                "description": "Student login with roll number and password"
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "// Test successful login",
                      "pm.test('Student login successful', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                      "});",
                      "",
                      "// Extract and save auth token",
                      "if (pm.response.code === 200 || pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    if (response.data && response.data.token) {",
                      "        pm.collectionVariables.set('authToken', response.data.token);",
                      "        console.log('Student auth token saved');",
                      "    }",
                      "}"
                    ]
                  }
                }
              ]
            },
            {
              "name": "4. Set Student Password",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"rollNumber\": \"{{studentId}}\",\n  \"password\": \"newPassword123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/users/auth/set-password",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", "auth", "set-password"]
                },
                "description": "Set or change student password"
              }
            }
          ]
        },
        {
          "name": "üë®‚Äçüíº Admin Authentication",
          "item": [
            {
              "name": "1. Admin Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"admin@dseu.ac.in\",\n  \"password\": \"admin123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/admin/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["admin", "auth", "login"]
                },
                "description": "Admin login with email and password"
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "// Test successful login",
                      "pm.test('Admin login successful', function () {",
                      "    pm.expect(pm.response.code).to.equal(200);",
                      "});",
                      "",
                      "// Extract and save admin token",
                      "if (pm.response.code === 200) {",
                      "    const response = pm.response.json();",
                      "    if (response.data && response.data.token) {",
                      "        pm.collectionVariables.set('adminToken', response.data.token);",
                      "        console.log('Admin auth token saved');",
                      "    }",
                      "}"
                    ]
                  }
                }
              ]
            },
            {
              "name": "2. Set Admin Password",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"admin@dseu.ac.in\",\n  \"newPassword\": \"newAdminPassword123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/admin/auth/set-password",
                  "host": ["{{baseUrl}}"],
                  "path": ["admin", "auth", "set-password"]
                },
                "description": "Set or change admin password"
              }
            },
            {
              "name": "3. Get Admin Profile",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/admin/profile",
                  "host": ["{{baseUrl}}"],
                  "path": ["admin", "profile"]
                },
                "description": "Get authenticated admin profile information"
              }
            },
            {
              "name": "4. Admin Dashboard Stats",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/admin/dashboard",
                  "host": ["{{baseUrl}}"],
                  "path": ["admin", "dashboard"]
                },
                "description": "Get admin dashboard statistics and overview"
              }
            },
            {
              "name": "5. Database Migration Info",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/admin/migrate",
                  "host": ["{{baseUrl}}"],
                  "path": ["admin", "migrate"]
                },
                "description": "Get database migration status and table information"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìù GRIEVANCE MANAGEMENT",
      "description": "Complete grievance lifecycle management",
      "item": [
        {
          "name": "üë®‚Äçüéì Student Grievance Operations",
          "item": [
            {
              "name": "1. Submit New Grievance",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"issueCode\": 1001,\n  \"subject\": \"Academic Issue - Grade Discrepancy\",\n  \"description\": \"There is a discrepancy in my semester grades for Computer Science course. The displayed grade does not match my performance.\",\n  \"hasAttachments\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/grievances",
                  "host": ["{{baseUrl}}"],
                  "path": ["grievances"]
                },
                "description": "Submit a new grievance with complete details"
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "// Test successful grievance submission",
                      "pm.test('Grievance submitted successfully', function () {",
                      "    pm.expect(pm.response.code).to.equal(201);",
                      "});",
                      "",
                      "// Extract and save grievance ID",
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    if (response.data && response.data.id) {",
                      "        pm.collectionVariables.set('grievanceId', response.data.id);",
                      "        console.log('Grievance ID saved: ' + response.data.id);",
                      "    }",
                      "}"
                    ]
                  }
                }
              ]
            },
            {
              "name": "2. Get My Grievances",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/grievances/my-grievances",
                  "host": ["{{baseUrl}}"],
                  "path": ["grievances", "my-grievances"]
                },
                "description": "Get all grievances submitted by authenticated student"
              }
            },
            {
              "name": "3. Get Specific Grievance Details",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/grievances/{{grievanceId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["grievances", "{{grievanceId}}"]
                },
                "description": "Get detailed information for a specific grievance"
              }
            },
            {
              "name": "4. Update Grievance Status",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"status\": \"Updated\",\n  \"description\": \"Updated description: The grade discrepancy affects my overall CGPA calculation.\",\n  \"priority\": \"High\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/grievances/{{grievanceId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["grievances", "{{grievanceId}}"]
                },
                "description": "Update grievance details"
              }
            },
            {
              "name": "5. Search Grievance by Issue ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/grievances/search/ISSUE001",
                  "host": ["{{baseUrl}}"],
                  "path": ["grievances", "search", "ISSUE001"]
                },
                "description": "Search for grievance by issue ID"
              }
            },
            {
              "name": "6. Get Grievances by Roll Number",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/grievances/by-rollno/{{studentId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["grievances", "by-rollno", "{{studentId}}"]
                },
                "description": "Get grievances by student roll number (requires authentication)"
              }
            }
          ]
        },
        {
          "name": "üë®‚Äçüíº Admin Grievance Management",
          "item": [
            {
              "name": "1. Get All Grievances (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/grievances",
                  "host": ["{{baseUrl}}"],
                  "path": ["grievances"]
                },
                "description": "Get all grievances (Admin only - requires authentication)"
              }
            },
            {
              "name": "2. Get Grievances by Roll Number (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/grievances/by-rollno/{{studentId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["grievances", "by-rollno", "{{studentId}}"]
                },
                "description": "Get grievances by student roll number (Admin access)"
              }
            },
            {
              "name": "3. Update Grievance Status (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"status\": \"Under Review\",\n  \"adminNotes\": \"Grievance is being reviewed by the academic department. We will contact you within 3-5 working days with updates.\",\n  \"priority\": \"High\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/grievances/{{grievanceId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["grievances", "{{grievanceId}}"]
                },
                "description": "Update grievance status with admin access"
              }
            },
            {
              "name": "4. Get Specific Grievance (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/grievances/{{grievanceId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["grievances", "{{grievanceId}}"]
                },
                "description": "Get detailed information for a specific grievance (Admin access)"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üîç VALIDATION & ERROR TESTING",
      "description": "Test error handling and validation",
      "item": [
        {
          "name": "1. Invalid Admin Login Credentials",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalid@test.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Should return 401 for invalid credentials', function () {",
                  "    pm.expect(pm.response.code).to.equal(401);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "2. Invalid Student Login Credentials",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rollNumber\": \"INVALID123\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["users", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Should return 401 for invalid student credentials', function () {",
                  "    pm.expect(pm.response.code).to.equal(401);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "3. Unauthorized Grievance Access",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/grievances",
              "host": ["{{baseUrl}}"],
              "path": ["grievances"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Should return 401 for unauthorized access', function () {",
                  "    pm.expect(pm.response.code).to.equal(401);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "4. Invalid Grievance Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"AB\",\n  \"description\": \"\",\n  \"priority\": \"InvalidPriority\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/grievances",
              "host": ["{{baseUrl}}"],
              "path": ["grievances"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Should return 400 for invalid data', function () {",
                  "    pm.expect(pm.response.code).to.equal(400);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "5. Non-existent Roll Number Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/auth/rollNumber-exist/NONEXISTENT999",
              "host": ["{{baseUrl}}"],
              "path": ["users", "auth", "rollNumber-exist", "NONEXISTENT999"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Should return 404 for non-existent roll number', function () {",
                  "    pm.expect(pm.response.code).to.equal(404);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
