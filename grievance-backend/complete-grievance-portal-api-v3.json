{
	"info": {
		"_postman_id": "complete-grievance-portal-api-v3",
		"name": "Complete Grievance Portal API Collection v3",
		"description": "Complete API collection covering all endpoints: User Auth, Grievances, Attachments (with work attachments), Admin Auth, Department Admin, Super Admin, and System APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string",
			"description": "Base URL for the API"
		},
		{
			"key": "api_version",
			"value": "v1",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "admin_jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "test_roll_number",
			"value": "231632043002",
			"type": "string"
		},
		{
			"key": "test_email",
			"value": "amankayasth23@gmail.com",
			"type": "string"
		},
		{
			"key": "admin_email",
			"value": "admin@example.com",
			"type": "string"
		},
		{
			"key": "test_grievance_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "test_attachment_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "test_work_attachment_id",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "üè• System Health & Monitoring",
			"item": [
				{
					"name": "API Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/health",
							"host": ["{{base_url}}"],
							"path": ["api", "health"]
						},
						"description": "Check database and system health"
					}
				},
				{
					"name": "Pool Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/pool-status",
							"host": ["{{base_url}}"],
							"path": ["api", "pool-status"]
						},
						"description": "Check connection pool status"
					}
				},
				{
					"name": "Environment Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/env-check",
							"host": ["{{base_url}}"],
							"path": ["api", "env-check"]
						},
						"description": "Check environment variables status"
					}
				},
				{
					"name": "API Test",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/test",
							"host": ["{{base_url}}"],
							"path": ["api", "test"]
						},
						"description": "Basic API functionality test"
					}
				}
			],
			"description": "System health and monitoring endpoints"
		},
		{
			"name": "üë§ User Authentication",
			"item": [
				{
					"name": "Check Roll Number Exists",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/users/auth/rollNumber-exist/{{test_roll_number}}",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "users", "auth", "rollNumber-exist", "{{test_roll_number}}"]
						},
						"description": "Check if a roll number exists in the system"
					}
				},
				{
					"name": "Verify Partial Email & Send OTP",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/users/auth/verify-partial-email/{{test_roll_number}}/{{test_email}}",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "users", "auth", "verify-partial-email", "{{test_roll_number}}", "{{test_email}}"]
						},
						"description": "Verify partial email matches and send OTP"
					}
				},
				{
					"name": "Verify OTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"rollNumber\": \"{{test_roll_number}}\",\n  \"otp\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/users/auth/verify-otp",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "users", "auth", "verify-otp"]
						},
						"description": "Verify OTP sent to user's email"
					}
				},
				{
					"name": "Set Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"rollNumber\": \"{{test_roll_number}}\",\n  \"password\": \"SecurePassword123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/users/auth/set-password",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "users", "auth", "set-password"]
						},
						"description": "Set password for user account"
					}
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.token) {",
									"        pm.collectionVariables.set('jwt_token', responseJson.token);",
									"        console.log('JWT Token saved:', responseJson.token);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"rollNumber\": \"{{test_roll_number}}\",\n  \"password\": \"SecurePassword123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/users/auth/login",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "users", "auth", "login"]
						},
						"description": "Login with roll number and password"
					}
				},
				{
					"name": "Resend OTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"rollNumber\": \"{{test_roll_number}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/users/auth/resend-otp",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "users", "auth", "resend-otp"]
						},
						"description": "Resend OTP to user's email"
					}
				}
			],
			"description": "User authentication and registration endpoints"
		},
		{
			"name": "üìù Grievance Management",
			"item": [
				{
					"name": "Create Grievance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data.issue_id) {",
									"        pm.collectionVariables.set('test_grievance_id', responseJson.data.issue_id);",
									"        console.log('Grievance ID saved:', responseJson.data.issue_id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Sample Grievance Title\",\n  \"description\": \"Detailed description of the grievance issue\",\n  \"department\": \"academic\",\n  \"category\": \"academic\",\n  \"priority\": \"medium\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/grievances",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "grievances"]
						},
						"description": "Create a new grievance"
					}
				},
				{
					"name": "Get My Grievances",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/grievances/my-grievances",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "grievances", "my-grievances"]
						},
						"description": "Get grievances submitted by authenticated user"
					}
				},
				{
					"name": "Get Grievance by Issue ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/grievances/search/{{test_grievance_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "grievances", "search", "{{test_grievance_id}}"]
						},
						"description": "Search for a grievance by issue ID"
					}
				},
				{
					"name": "Get Grievance by Issue ID (Alternative)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/grievances/issue/{{test_grievance_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "grievances", "issue", "{{test_grievance_id}}"]
						},
						"description": "Alternative endpoint to search by issue ID"
					}
				},
				{
					"name": "Get Grievance by Database ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/grievances/1",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "grievances", "1"]
						},
						"description": "Get grievance by database ID"
					}
				},
				{
					"name": "Get All Grievances",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/grievances",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "grievances"]
						},
						"description": "Get all grievances (filtered by role)"
					}
				},
				{
					"name": "Get Grievances by Roll Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/grievances/by-rollno/{{test_roll_number}}",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "grievances", "by-rollno", "{{test_roll_number}}"]
						},
						"description": "Get grievances by specific roll number"
					}
				},
				{
					"name": "Update Grievance Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"in_progress\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/grievances/1",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "grievances", "1"]
						},
						"description": "Update grievance status"
					}
				}
			],
			"description": "Grievance management endpoints"
		},
		{
			"name": "üìé Attachment Management",
			"item": [
				{
					"name": "Attachment System Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/attachments/health",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "attachments", "health"]
						},
						"description": "Check attachment service health"
					}
				},
				{
					"name": "Upload Attachment to Grievance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data.id) {",
									"        pm.collectionVariables.set('test_attachment_id', responseJson.data.id);",
									"        console.log('Attachment ID saved:', responseJson.data.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "attachment",
									"type": "file",
									"src": [],
									"description": "PDF file to upload"
								},
								{
									"key": "issue_id",
									"value": "{{test_grievance_id}}",
									"type": "text",
									"description": "Grievance issue ID"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/attachments/upload",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "attachments", "upload"]
						},
						"description": "Upload attachment to a specific grievance"
					}
				},
				{
					"name": "Upload Work Attachment (Standalone)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data.id) {",
									"        pm.collectionVariables.set('test_work_attachment_id', responseJson.data.id);",
									"        console.log('Work Attachment ID saved:', responseJson.data.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "attachment",
									"type": "file",
									"src": [],
									"description": "PDF file to upload as standalone work attachment"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/attachments/upload-work",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "attachments", "upload-work"]
						},
						"description": "Upload standalone work attachment (only requires JWT token)"
					}
				},
				{
					"name": "Get My Work Attachments",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/attachments/my-work",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "attachments", "my-work"]
						},
						"description": "Get all work attachments for authenticated user"
					}
				},
				{
					"name": "Download Attachment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/attachments/{{test_attachment_id}}/download",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "attachments", "{{test_attachment_id}}", "download"]
						},
						"description": "Download attachment file"
					}
				},
				{
					"name": "Download Work Attachment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/attachments/{{test_work_attachment_id}}/download",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "attachments", "{{test_work_attachment_id}}", "download"]
						},
						"description": "Download work attachment file"
					}
				},
				{
					"name": "Delete Attachment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/attachments/{{test_attachment_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "attachments", "{{test_attachment_id}}"]
						},
						"description": "Delete attachment (user can only delete their own)"
					}
				},
				{
					"name": "Delete Work Attachment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/attachments/{{test_work_attachment_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "attachments", "{{test_work_attachment_id}}"]
						},
						"description": "Delete work attachment (user can only delete their own)"
					}
				}
			],
			"description": "Attachment management including grievance and work attachments"
		},
		{
			"name": "üîê Admin Authentication",
			"item": [
				{
					"name": "Database Migration Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/admin/migrate",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "admin", "migrate"]
						},
						"description": "Check database migration status"
					}
				},
				{
					"name": "Simple Admin Login (Testing)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.token) {",
									"        pm.collectionVariables.set('admin_jwt_token', responseJson.token);",
									"        console.log('Admin JWT Token saved:', responseJson.token);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{admin_email}}\",\n  \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/admin/auth/simple-login",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "admin", "auth", "simple-login"]
						},
						"description": "Simple admin login for testing (bypasses OTP)"
					}
				},
				{
					"name": "Admin Verify OTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"adminId\": \"admin1\",\n  \"otp\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/admin/auth/verify-otp",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "admin", "auth", "verify-otp"]
						},
						"description": "Verify OTP for admin login"
					}
				},
				{
					"name": "Admin Resend OTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"adminId\": \"admin1\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/admin/auth/resend-otp",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "admin", "auth", "resend-otp"]
						},
						"description": "Resend OTP for admin"
					}
				},
				{
					"name": "Admin Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"adminId\": \"admin1\",\n  \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/admin/auth/login",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "admin", "auth", "login"]
						},
						"description": "Admin login after OTP verification"
					}
				},
				{
					"name": "Admin Set Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"adminId\": \"admin1\",\n  \"password\": \"NewAdminPassword123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/admin/auth/set-password",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "admin", "auth", "set-password"]
						},
						"description": "Set or change admin password"
					}
				},
				{
					"name": "Admin Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/admin/profile",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "admin", "profile"]
						},
						"description": "Get admin profile information"
					}
				},
				{
					"name": "Admin Dashboard",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/admin/dashboard",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "admin", "dashboard"]
						},
						"description": "Get admin dashboard data"
					}
				}
			],
			"description": "Admin authentication and profile endpoints"
		},
		{
			"name": "üè¢ Department Admin",
			"item": [
				{
					"name": "Get Department Grievances",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/dept-admin/grievances",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "dept-admin", "grievances"]
						},
						"description": "Get grievances for department admin"
					}
				},
				{
					"name": "Add Response to Grievance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"responseText\": \"Thank you for your grievance. We are looking into this matter.\",\n  \"status\": \"in_progress\",\n  \"stage\": \"department_review\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/dept-admin/grievances/1/response",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "dept-admin", "grievances", "1", "response"]
						},
						"description": "Add response to a grievance"
					}
				},
				{
					"name": "Reject Grievance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"reason\": \"Insufficient information provided\",\n  \"note\": \"Please provide more details about the issue\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/dept-admin/grievances/1/reject",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "dept-admin", "grievances", "1", "reject"]
						},
						"description": "Reject a grievance with reason"
					}
				},
				{
					"name": "Redirect Grievance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"redirectTo\": \"exam\",\n  \"reason\": \"This grievance should be handled by the exam department\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/dept-admin/grievances/1/redirect",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "dept-admin", "grievances", "1", "redirect"]
						},
						"description": "Redirect grievance to another department"
					}
				},
				{
					"name": "Update Grievance Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"resolved\",\n  \"note\": \"Issue has been resolved successfully\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/dept-admin/grievances/1/status",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "dept-admin", "grievances", "1", "status"]
						},
						"description": "Update grievance status"
					}
				},
				{
					"name": "Get Department Statistics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/dept-admin/stats",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "dept-admin", "stats"]
						},
						"description": "Get department statistics"
					}
				},
				{
					"name": "Get Admin Campuses",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/dept-admin/campuses",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "dept-admin", "campuses"]
						},
						"description": "Get campuses assigned to admin"
					}
				},
				{
					"name": "Get Main Campus Department Admins",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/dept-admin/main-campus/academic/admins",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "dept-admin", "main-campus", "academic", "admins"]
						},
						"description": "Get department admins for main campus"
					}
				}
			],
			"description": "Department admin grievance management endpoints"
		},
		{
			"name": "üëë Super Admin",
			"item": [
				{
					"name": "Super Admin Test",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/super-admin/test",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "super-admin", "test"]
						},
						"description": "Test super admin routes"
					}
				},
				{
					"name": "Create Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"adminId\": \"newadmin123\",\n  \"name\": \"New Admin\",\n  \"email\": \"newadmin@example.com\",\n  \"role\": \"academic\",\n  \"campusId\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/super-admin/admins",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "super-admin", "admins"]
						},
						"description": "Create new admin"
					}
				},
				{
					"name": "Get All Admins",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/super-admin/admins",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "super-admin", "admins"]
						},
						"description": "Get all admins"
					}
				},
				{
					"name": "Get Admins by Campus",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/super-admin/admins/campus/1",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "super-admin", "admins", "campus", "1"]
						},
						"description": "Get admins by campus ID"
					}
				},
				{
					"name": "Assign Admin to Campus",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"adminId\": \"admin123\",\n  \"campusId\": 1,\n  \"department\": \"academic\",\n  \"isPrimary\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/super-admin/admins/assign-campus",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "super-admin", "admins", "assign-campus"]
						},
						"description": "Assign admin to campus and department"
					}
				},
				{
					"name": "Update Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Admin Name\",\n  \"email\": \"updated@example.com\",\n  \"role\": \"exam\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/super-admin/admins/admin123",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "super-admin", "admins", "admin123"]
						},
						"description": "Update admin information"
					}
				},
				{
					"name": "Deactivate Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/super-admin/admins/admin123",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "super-admin", "admins", "admin123"]
						},
						"description": "Deactivate admin account"
					}
				},
				{
					"name": "Get Campus Admin Statistics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/super-admin/stats/campus-admin",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "super-admin", "stats", "campus-admin"]
						},
						"description": "Get campus admin statistics"
					}
				},
				{
					"name": "Get System Statistics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/super-admin/stats/system",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "super-admin", "stats", "system"]
						},
						"description": "Get overall system statistics"
					}
				},
				{
					"name": "Get Admin Audit Logs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/super-admin/audit-logs",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "super-admin", "audit-logs"]
						},
						"description": "Get admin audit logs"
					}
				},
				{
					"name": "Get All Campus Issues",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/super-admin/campus-issues",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "super-admin", "campus-issues"]
						},
						"description": "Get all campus issues"
					}
				},
				{
					"name": "Get All Department Issues",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/super-admin/department-issues",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "super-admin", "department-issues"]
						},
						"description": "Get all department issues"
					}
				},
				{
					"name": "Get All Issues",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/super-admin/all-issues",
							"host": ["{{base_url}}"],
							"path": ["api", "{{api_version}}", "super-admin", "all-issues"]
						},
						"description": "Get all system issues"
					}
				}
			],
			"description": "Super admin management endpoints for system administration"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Pre-request script for the collection",
					"console.log('Running request to:', pm.request.url.toString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test('Response has proper headers', function () {",
					"    pm.expect(pm.response.headers.get('Content-Type')).to.include('json');",
					"});"
				]
			}
		}
	]
}
